module Main;

import Random;
import CPLib.Graph;

main : IO (); 
main = (
    // n個の頂点を持つグラフをランダムに生成
    let n = 1e5;
    let rng = Random::init_by_seed(0_U64);
    let graph = Graph::create(n) : Graph ();
    let (graph, rng) = range(0, n).fold((graph, rng), |i, (graph, rng)|
        let (rng, i) = rng.generate_I64_nonneg;
        let i = i % n;
        let (rng, j) = rng.generate_I64_nonneg;
        let j = j % n;
        (graph.add_edge(i, j, ()), rng)
    );
    // 強連結成分を計算
    let (sccs, time) = consumed_time_while_lazy(|_| graph.calc_sccs);
    assert_eq(|_|"test_scc_speed", sccs.get_size, 99999);;
    println("[CPLib.Graph.Test] calc_sccs({}): {}".populate([n.to_string, time.to_string]));;
    pure()
);