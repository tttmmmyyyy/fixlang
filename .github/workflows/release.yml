# Original version of this file was taken from https://github.com/okmt765/rust-github-actions-example/blob/master/.github/workflows/release.yml, and the original license is as follows:
################################################################################
# MIT License
#
# Copyright (c) 2023 okmt765
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
################################################################################

name: Release

# Write permissions required for adding files to Releases
permissions:
  contents: write

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.job.image }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu, 
              image: ubuntu-24.04, 
              target: x86_64-unknown-linux-gnu, 
              use-cross: false, 
              llvm-url: "https://github.com/llvm/llvm-project/releases/download/llvmorg-17.0.6/clang+llvm-17.0.6-x86_64-linux-gnu-ubuntu-22.04.tar.xz", 
              extension: "" }
          - { os: macos,  
              image: macos-13, 
              target: x86_64-apple-darwin, 
              use-cross: false, 
              extension: "" }
          - { os: macos,  
              image: macos-14, 
              target: aarch64-apple-darwin, 
              use-cross: false, 
              extension: "" }
          # Reference: https://github.com/actions/runner-images
          # - { os: ubuntu, image: ubuntu-latest  , target: aarch64-unknown-linux-gnu      , use-cross: true  , extension: ""   } # Cross-compilation of OpenSSL doesn't work well, so it's omitted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Get Rust package name and store it in environment variable (used in later steps)
      - name: Extract crate information
        shell: bash
        run: |
          echo "PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml | head -n1)" >> $GITHUB_ENV

      # Install LLVM (and OpenSSL)
      - name: Install LLVM & OpenSSL
        shell: bash
        run: |
            if [[ "${{ matrix.job.os }}" == "ubuntu" ]]; then
              LLVM_URL="${{ matrix.job.llvm-url }}"
              mkdir -p llvm
              wget -q "$LLVM_URL" -O llvm.tar.xz
              tar -xf llvm.tar.xz -C llvm --strip-components=1
              LLVM_PATH="${GITHUB_WORKSPACE}/llvm"
              echo "LLVM_SYS_170_PREFIX=$LLVM_PATH" >> $GITHUB_ENV
            elif [[ "${{ matrix.job.os }}" == "macos" ]]; then
              brew install llvm@17
              echo "LLVM_SYS_170_PREFIX=$(brew --prefix llvm@17)" >> $GITHUB_ENV
              brew install openssl
              echo "OPENSSL_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
            else
              echo "Unsupported OS: ${{ matrix.job.os }}"
              exit 1
            fi

      # Install rustc and cargo
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          override: true
          profile: minimal

      # Build using cargo or cross depending on target
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --release --target ${{ matrix.job.target }}

      # Rename built binary
      - name: Rename artifacts
        shell: bash
        run: |
          mv target/${{ matrix.job.target }}/release/fix{,-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}}

      # Place built binary in Releases
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/${{ matrix.job.target }}/release/fix-${{ github.ref_name }}-${{ matrix.job.target }}${{ matrix.job.extension }}
